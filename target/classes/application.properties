logging.level.root=INFO
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.platform=mysql
#spring.datasource.continueOnError=false
spring.batch.initialize-schema=always
spring.batch.job.enabled=false


    
    
#insertPersonSql=INSERT INTO PERSON (id, firstName, lastName, birthdate) 
#VALUES (:id1, :firstName, :lastName, :birthdate) 
#ON DUPLICATE KEY UPDATE 
#firstName = VALUES(firstName), lastName = VALUES(lastName), birthdate = VALUES(birthdate);


insertPersonSql=INSERT INTO person (id, first_Name, last_Name, birthdate) 
VALUES (:id1, :firstName, :lastName, :birthdate) 
ON DUPLICATE KEY UPDATE 
first_Name = VALUES(first_Name), last_Name = VALUES(last_Name), birthdate = VALUES(birthdate);


#inputFile=/poeflow/src/main/resources/data/person.csv
inputFile=classpath:data/person.csv

#batch.file.input.path=//poeflow//src//main//resources//data//person.txt
#
#batch.file.input.fieldNames=id,firstName.lastname
#batch.file.input.fieldRanges={1:3,4:5,6:9}



#insertStudentSql=insertStudentSql=INSERT INTO STUDENT (id, firstName, lastName, birthdate) 
#    VALUES (:id1, :firstName, :lastName, :birthdate) 
#    ON DUPLICATE KEY UPDATE 
#    firstName=VALUES(firstName), lastName=VALUES(lastName), birthdate=VALUES(birthdate);


insertStudentSql=INSERT INTO student (id, first_Name, last_Name, birthdate) 
VALUES (:id1, :firstName, :lastName, :birthdate) 
ON DUPLICATE KEY UPDATE 
first_Name=VALUES(first_Name), last_Name=VALUES(last_Name), birthdate=VALUES(birthdate);
